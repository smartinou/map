//.$file${Logging::../inc::LogLevel.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: PFPP.qm
// File:  ${Logging::../inc::LogLevel.h}
//
// This code has been generated by QM 5.1.3 <www.state-machine.com/qm/>.
// DO NOT EDIT SECTIONS BETWEEN THE COMMENTS "$...vvv".."$end...^^^".
// All your changes in these sections will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//
//.$endhead${Logging::../inc::LogLevel.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//$file${Logging::../inc::LogLevel.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: PFPP.qm
// File:  ${Logging::../inc::LogLevel.h}
//
// This code has been generated by QM 4.5.1 (https://www.state-machine.com/qm).
// DO NOT EDIT SECTIONS BETWEEN THE COMMENTS "$...###".."$end...###".
// All your changes in these sections will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//
//$endhead${Logging::../inc::LogLevel.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#pragma once
// *******************************************************************************
//
// Project: Logging.
//
// Module: LogLevel.
//
// *******************************************************************************

//! \file
//! \brief LogLevel class.
//! \ingroup qp_ao

// ******************************************************************************
//
//        Copyright (c) 2018-2022, Pleora Technologies, All rights reserved.
//
// ******************************************************************************

// ******************************************************************************
//                              INCLUDE FILES
// ******************************************************************************

#include <string_view>

// ******************************************************************************
//                       DEFINED CONSTANTS AND MACROS
// ******************************************************************************

// ******************************************************************************
//                         TYPEDEFS AND STRUCTURES
// ******************************************************************************

namespace LogLevel {


enum class prio : unsigned int {
    DEBUG = 0,
    INFO,
    WARNING,
    ERROR,
    CRITICAL,
    DISABLED
};


constexpr auto ToStr(prio const aLevel) noexcept -> std::string_view {

    using namespace std::literals::string_view_literals;
    switch (aLevel) {
        case prio::DEBUG: return "Debug"sv;
        case prio::INFO: return "Info"sv;
        case prio::WARNING: return "Warning"sv;
        case prio::ERROR: return "Error"sv;
        case prio::CRITICAL: return "Critical"sv;
        case prio::DISABLED: return "Disabled"sv;
        default: break;
    }

    return ""sv;
}


} // namespace Loglevel

// ******************************************************************************
//                            EXPORTED VARIABLES
// ******************************************************************************

// ******************************************************************************
//                                 EXTERNS
// ******************************************************************************

// ******************************************************************************
//                            EXPORTED FUNCTIONS
// ******************************************************************************

// ******************************************************************************
//                                END OF FILE
// ******************************************************************************
