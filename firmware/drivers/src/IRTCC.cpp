// *****************************************************************************
//
// Project: Drivers.
//
// Module: RTCC.
//
// *****************************************************************************

//! \file
//! \brief RTCC base class.
//! \ingroup ext_peripherals

// *****************************************************************************
//
//        Copyright (c) 2015-2019, Martin Garon, All rights reserved.
//
// *****************************************************************************

// *****************************************************************************
//                              INCLUDE FILES
// *****************************************************************************

#include "IRTCC.h"

// *****************************************************************************
//                      DEFINED CONSTANTS AND MACROS
// *****************************************************************************

// *****************************************************************************
//                         TYPEDEFS AND STRUCTURES
// *****************************************************************************

// *****************************************************************************
//                            FUNCTION PROTOTYPES
// *****************************************************************************

// *****************************************************************************
//                             GLOBAL VARIABLES
// *****************************************************************************

// *****************************************************************************
//                            EXPORTED FUNCTIONS
// *****************************************************************************

// *****************************************************************************
//                              LOCAL FUNCTIONS
// *****************************************************************************

unsigned int IRTCC::BinaryToBCD(unsigned int aBinVal) {

  unsigned int lBCDVal = 0;

  if (aBinVal > 10) {
    lBCDVal   = BinaryToBCD(aBinVal / 10);
    lBCDVal <<= 4;
    lBCDVal  |= (aBinVal % 10);
  } else {
    lBCDVal = aBinVal;
  }

  return lBCDVal;
}


unsigned int IRTCC::BCDToBinary(unsigned int aBCDVal) {

  unsigned int lBinVal = aBCDVal & 0x0F;
  aBCDVal >>= 4;
  if (0 != aBCDVal) {
    lBinVal += (10 * BCDToBinary(aBCDVal));
  }

  return lBinVal;
}

// *****************************************************************************
//                                END OF FILE
// *****************************************************************************
